{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","target","value","autoFocus","type","onBlur","updateStatus","ProfileInfo","profile","className","classes","descriptionBlock","src","photos","large","fullName","Preloader","Post","item","alt","message","maxLength10","maxLengthCreator","MyPosts","React","memo","postsElements","posts","map","post","likesCount","postsBlock","AddPostFormRedux","onSubmit","values","addPost","newPost","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","setProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.5275dde8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2apUW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3B-k2\",\"posts\":\"MyPosts_posts__2kQWy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__UfSd3\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = props => {\r\n\r\n   let [editMode, setEditMode] = useState(false);\r\n   let [status, setStatus] = useState(props.status);\r\n\r\n   useEffect(() => {\r\n       setStatus(props.status);\r\n   },[props.status]);\r\n\r\n   const activateEditMode = () => {\r\n       setEditMode(true);\r\n    };\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = e => {\r\n        setStatus(e.target.value);\r\n        setStatus(e.target.value);\r\n    };\r\n        return (\r\n            <div>\r\n                { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || 'no-status'}</span>\r\n                </div>\r\n                }\r\n\r\n                {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} type=\"text\" onBlur={deActivateEditMode} value={status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n            <div>\r\n                <div className={classes.descriptionBlock}>\r\n                    <img src={props.profile.photos.large} />\r\n                    <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n                    <br/>\r\n                    <span>{props.profile.fullName}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n};\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = props => {\r\n\r\n    return <div className={classes.item}>\r\n        <img src=\"https://icdn.lenta.ru/images/2020/01/28/17/20200128170822958/square_320_9146846fb3b1bfae5672755bc1896214.jpg\" alt=\"user\"/>\r\n        {props.message}\r\n        <div>\r\n            <span>like</span>\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n};\r\n\r\nexport default Post;","import React, {Component} from \"react\";\r\nimport classes from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n\r\n    const addNewPost = values => {\r\n        props.addPost(values.newPost)\r\n    };\r\n\r\n        let postsElements = props.posts.map((post) => <Post message={post.message} likesCount={post.likesCount} />);\r\n        return (\r\n            <div className={classes.postsBlock}>\r\n                <h3>My posts</h3>\r\n\r\n                <AddPostFormRedux onSubmit={addNewPost} />\r\n                <div className={classes.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        )\r\n});\r\n\r\nconst AddPostForm = props => {\r\n\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name=\"newPost\"\r\n                       placeholder=\"Add new post\"\r\n                       validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({form: 'addPostForm'})(AddPostForm);\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPost) => {\r\n            dispatch(addPostActionCreator(newPost))\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\"\r\nimport {getStatus, setProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            //userId = 2;\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.setProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, {setProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n   // WithAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}