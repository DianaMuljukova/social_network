{"version":3,"sources":["redux/dialogs-reducer.js","components/common/Paginator/Paginator.module.css","api/api.js","components/Users/Users.module.css","assets/images/avatar-youtube-cat-png-favpng-PRA6iZsrgWAqXFqmjMsfSvuPG.jpg","assets/images/ZKZg.gif","components/Navbar/Navbar.module.css","components/Navbar/Navbar.js","components/common/Paginator/Paginator.js","components/Users/User.js","components/Users/Users.js","utils/object-helpers.js","redux/users-reducer.js","redux/users-selectors.js","components/Users/UsersContainer.js","components/Header/Header.js","redux/auth-reducer.js","components/Header/HeaderContainer.js","components/Login/Login.js","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/WithSuspense.js","App.js","serviceWorker.js","index.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/Header/Header.module.css","components/common/Preloader/Preloader.js","redux/profile-reducer.js"],"names":["initialState","messages","id","message","dialogs","name","addNewMessageActionCreator","newMessageBody","type","dialogReducer","state","action","module","exports","instance","axios","withCredentials","baseURL","headers","usersApi","getUsers","currentPage","pageSize","get","then","response","data","followUser","post","unFollowUser","delete","authApi","me","login","email","password","rememberMe","logout","profileApi","setProfile","userId","getStatus","updateStatus","status","put","Navbar","className","classes","nav","item","to","activeClassName","active","Paginator","totalUsersCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","filter","p","map","e","selectedPage","Users","user","followingInProgress","follow","unfollow","src","photos","small","userPhoto","followed","disabled","some","props","users","User","key","updateObjectInArray","items","itemId","objPropName","newObjProps","u","newPostText","isFetching","followSuccess","unfollowSuccess","toggleIsFetching","toggleIsFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","userReducer","totalCount","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","this","Preloader","React","Component","connect","bind","page","Header","header","logo","alt","loginBlock","isAuth","SET_USER_DATA","setUserData","getAuthUserData","authReducer","console","log","HeaderComponent","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","styles","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","WithSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","exact","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","meta","touched","children","hasError","formControl","Textarea","input","restProps","placeholder","validators","component","text","validate","value","maxLengthCreator","maxLength","preloader","style","width","height","posts","likesCount","profile","addPostActionCreator","newPost","setStatus","postId"],"mappings":"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","file":"static/js/main.8ccf44ad.chunk.js","sourcesContent":["\r\nconst SEND_MESSAGE = 'ADD_MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        { id: 1, message: \"Hi\"},\r\n        { id: 2, message: \"How are you\"},\r\n    ],\r\n    dialogs: [\r\n        { id: 1, name: \"Diana\"},\r\n        { id: 2, name: \"Svyatoslav\"},\r\n    ],\r\n};\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n\r\n\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 3, message: action.newMessageBody}]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const addNewMessageActionCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default dialogReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__t4yCO\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"c459fe84-9efd-4d0d-ad94-0fc549d7bb06\"\r\n    }\r\n});\r\n\r\nexport const usersApi = {\r\n    getUsers (currentPage = 1, pageSize = 10)  {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    followUser (id) {\r\n        return instance.post(`/follow/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    unFollowUser (id) {\r\n        return instance.delete(`/follow/${id}`)\r\n            .then(response => response.data)\r\n    }\r\n};\r\n\r\nexport const authApi = {\r\n    me () {\r\n        return instance.get(`/auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n    login (email, password, rememberMe = false) {\r\n        return instance.post(`/auth/login`, {email, password, rememberMe})\r\n            .then(response => response.data)\r\n    },\r\n    logout () {\r\n        return instance.delete(`/auth/login`)\r\n            .then(response => response.data)\r\n    }\r\n};\r\n\r\nexport const profileApi = {\r\n    setProfile (userId)   {\r\n        return instance.get(`/profile/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    getStatus (userId)   {\r\n        return instance.get(`/profile/status/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    updateStatus (status)   {\r\n        return instance.put(`/profile/status`, {\r\n            status: status\r\n        })\r\n            .then(response => response.data)\r\n    },\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__2xB4C\"};","module.exports = __webpack_public_path__ + \"static/media/avatar-youtube-cat-png-favpng-PRA6iZsrgWAqXFqmjMsfSvuPG.364e6dcd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ZKZg.a21746f5.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__UTUwQ\",\"item\":\"Navbar_item__3rmxY\",\"active\":\"Navbar_active__Byln3\"};","import React from \"react\";\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/profile\" activeClassName={classes.active}>\r\n                Profile\r\n            </NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={classes.active}>\r\n                Messages\r\n            </NavLink>\r\n        </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/users\" activeClassName={classes.active}>\r\n                    Users\r\n                </NavLink>\r\n            </div>\r\n    </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar;","import React, {useState} from \"react\";\r\nimport classes from './Paginator.module.css';\r\n\r\n\r\n\r\nlet Paginator = ({totalUsersCount, currentPage, onPageChanged, pageSize, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {portionNumber > 1 &&\r\n                <button onClick={() => setPortionNumber(portionNumber - 1)}>LEFT</button>}\r\n                {pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map(p => <span\r\n                    onClick={(e) => {onPageChanged(p)}}\r\n                    className={currentPage === p && classes.selectedPage}\r\n                >{p}</span>)}\r\n                {portionCount > portionNumber &&\r\n                <button onClick={() => setPortionNumber(portionNumber + 1)}>RIGHT</button>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport classes from './Users.module.css';\r\nimport userPhoto from '../../assets/images/avatar-youtube-cat-png-favpng-PRA6iZsrgWAqXFqmjMsfSvuPG.jpg';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nlet Users = ({user, followingInProgress, follow, unfollow, ...props}) => {\r\n\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                                <NavLink to={\"/profile/\" + user.id}>\r\n                                  <img src={user.photos.small !== null ? user.photos.small : userPhoto} className={classes.userPhoto} />\r\n                                </NavLink>\r\n                            </div>\r\n                            <div>\r\n\r\n                                {user.followed\r\n                                    ? <button\r\n                                        disabled={followingInProgress.some(id => id === user.id)}\r\n                                        onClick={() => {unfollow(user.id)}}>\r\n                                        Unfollow\r\n                                    </button>\r\n                                    : <button\r\n                                        disabled={followingInProgress.some(id => id === user.id)}\r\n                                        onClick={() => {follow(user.id)}}>\r\n                                        Follow\r\n                                    </button>\r\n                                }\r\n\r\n                            </div>\r\n                        </span>\r\n\r\n            <span>\r\n                            <span>\r\n                                <div>{user.name}</div>\r\n                                <div>{user.status}</div>\r\n                            </span>\r\n                            <span>\r\n                                <div>{'user.location.city'}</div>\r\n                                <div>{'user.location.country'}</div>\r\n                            </span>\r\n                        </span>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Users;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\n\r\nlet Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, ...props}) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalUsersCount={totalUsersCount} pageSize={pageSize} />\r\n\r\n            <div>\r\n                {\r\n                    props.users.map(user => <User key={user.id}\r\n                                                  user={user}\r\n                                                  followingInProgress={props.followingInProgress}\r\n                                                  unfollow={props.unfollow}\r\n                                                  follow={props.follow} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Users;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n   return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps};\r\n        }\r\n        return u;\r\n    })\r\n};","import {usersApi} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    newPostText: '',\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case FOLLOW:\r\n            return  {...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            };\r\n\r\n        case UNFOLLOW:\r\n            return  {...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            };\r\n        case SET_USERS:\r\n            return {...state, users: action.users};\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalCount};\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let response = await usersApi.getUsers(page, pageSize);\r\n        dispatch(setUsers(response.items));\r\n        dispatch(setTotalUsersCount(response.totalCount));\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId));\r\n    let data = await apiMethod(userId);\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersApi.followUser.bind(usersApi), followSuccess);\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersApi.unFollowUser.bind(usersApi), unfollowSuccess);\r\n    }\r\n};\r\n\r\nexport default userReducer;","import {createSelector} from \"reselect\";\r\n\r\n const getUsersSelector = state => {\r\n    return state.usersPage.users;\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n   return users.filter(u => true)\r\n});\r\n\r\nexport const getPageSize = state => {\r\n    return state.usersPage.pageSize\r\n};\r\n\r\nexport const getTotalUsersCount = state => {\r\n    return state.usersPage.totalUsersCount\r\n};\r\n\r\nexport const getCurrentPage = state => {\r\n    return state.usersPage.currentPage\r\n};\r\n\r\nexport const getIsFetching = state => {\r\n    return state.usersPage.isFetching\r\n};\r\n\r\nexport const getFollowingInProgress = state => {\r\n    return state.usersPage.followingInProgress\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport { follow, unfollow, requestUsers } from \"../../redux/users-reducer\"\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const { requestUsers, currentPage, pageSize } = this.props;\r\n        requestUsers(currentPage, pageSize);\r\n    }\r\n    onPageChanged = (p) => {\r\n        const { requestUsers, pageSize } = this.props;\r\n       requestUsers(p, pageSize);\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        return <>\r\n            { this.props.isFetching ? <Preloader /> : null }\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                users={this.props.users}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                onPageChanged={this.onPageChanged}\r\n                toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    requestUsers\r\n})(UsersContainer);\r\n\r\n","import React from \"react\";\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={classes.header}>\r\n        <img className={classes.logo} src=\"https://www.rundesign.it/wp-content/uploads/2018/10/Tavola-disegno-1@2x.png\" alt=\"logo\" />\r\n        <div className={classes.loginBlock}>\r\n            {\r\n                props.isAuth ?\r\n                    <div>{props.login} <button onClick={props.logout}>Logout</button> </div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>\r\n            }\r\n\r\n        </div>\r\n    </header>\r\n};\r\n\r\nexport default Header;","import {authApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            console.log(action.data);\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setUserData = (login, userId, email, isAuth) => ({type: SET_USER_DATA, data: {userId, email, login, isAuth}});\r\n\r\nexport const getAuthUserData = () => {\r\n    return (dispatch) => {\r\n        return authApi.me()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    let {login, id, email } = data.data;\r\n                    dispatch(setUserData(login, id, email, true))\r\n                }\r\n            });\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        let response = await authApi.login(email, password, rememberMe);\r\n        if (response.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n            let message = response.messages.length > 0 ? response.messages[0] : \"Some error\";\r\n            dispatch(stopSubmit('login', {_error: message}))\r\n        }\r\n    }\r\n};\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let response = await authApi.logout();\r\n        if (response.resultCode === 0) {\r\n            dispatch(setUserData(null, null, null, false))\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderComponent extends React.Component {\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderComponent);","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"../../components/common/FormsControls/FormsControls.module.css\";\r\n\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                    {createField(\"email\", \"email\", [required], Input)}\r\n                    {createField(\"password\", \"password\", [required], Input, {type: \"password\"})}\r\n                    {createField(null, \"rememberMe\", [required], Input, {type: \"checkbox\"}, \"Remember me\")}\r\n                {\r\n                    error &&\r\n                    <div className={styles.formSummaryError}>\r\n                        {error}\r\n                    </div>\r\n                }\r\n                <div>\r\n                    <button>\r\n                        Login\r\n                    </button>\r\n                </div>\r\n            </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        const { email, password, rememberMe } = formData;\r\n        props.login(email, password, rememberMe)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case SET_INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: SET_INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(getAuthUserData());\r\n        Promise.all([promise]).then(() => {\r\n            dispatch(initializedSuccess())\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore, compose} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport userReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: userReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    appReducer: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React, {Suspense} from \"react\";\r\n\r\nexport const WithSuspense = Component => {\r\n    return (props) => {\r\n        return <Suspense fallback={<div>loading</div>}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    };\r\n};","import React, {Suspense} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar'\nimport {BrowserRouter, Route, withRouter} from 'react-router-dom';\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderComponent from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {compose} from \"redux\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {WithSuspense} from \"./hoc/WithSuspense\";\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\n\n\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n\n        // if (!this.props.initialized) {\n        //     return <Preloader/>\n        // }\n\n        return (\n            <div className=\"app-wrapper\">\n\n                <HeaderComponent />\n\n                <Navbar />\n\n                <div className=\"app-wrapper-content\">\n                    <Route exact path=\"/dialogs\" render={ WithSuspense(DialogsContainer)} />\n                    <Route path=\"/profile/:userId?\" render={WithSuspense(ProfileContainer)} />\n                    <Route path=\"/users\" render={() => <UsersContainer />} />\n                    <Route path=\"/login\" render={() => <LoginPage />} />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        initialized: state.appReducer.initialized\n    }\n};\n\nlet AppContainer =  compose(withRouter, connect(mapStateToProps, {initializeApp}))(App);\n\n let SamuraiJSApp = props => {\n    return (\n        <BrowserRouter>\n            <Provider store={store}>\n                <AppContainer />\n            </Provider>\n        </BrowserRouter>\n    )\n};\n\nexport default SamuraiJSApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport './index.css';\nimport SamuraiJSApp from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from \"react-dom\";\n\n\nReactDOM.render(\n    <SamuraiJSApp />\n    , document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({meta : {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {(hasError) && <span>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport const Textarea = props => {\r\n    const {input, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport const Input = props => {\r\n    const {input, ...restProps} = props;\r\n\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder}  component={component} name={name} validate={validators} {...props} /> {text}\r\n    </div>\r\n);\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__196CI\",\"error\":\"FormsControls_error__1CJe4\",\"formSummaryError\":\"FormsControls_formSummaryError__1MP8X\"};","export const required = value => {\r\n    if (value) return  undefined;\r\n    return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value && value.length > maxLength) return  `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3WoTM\",\"logo\":\"Header_logo__1SrVi\",\"loginBlock\":\"Header_loginBlock__2occm\"};","import preloader from \"../../../assets/images/ZKZg.gif\";\r\nimport React from \"react\";\r\n\r\nconst Preloader = props => {\r\n  return (\r\n      <img src={preloader} style={{width: '50px', height: '50px'}}/>\r\n  )\r\n};\r\n\r\nexport default Preloader;","import {profileApi} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: \"Hi, how are you?\", likesCount: 12},\r\n        { id: 2, message: \"It's my first post\", likesCount: 11},\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 3,\r\n                message: action.newPost,\r\n                likesCount: 1\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: [state.posts.filter(p => p.id !== action.postId)]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPost) => ({type: ADD_POST, newPost});\r\n\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\n\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\nexport const setProfile = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await profileApi.setProfile(userId);\r\n        dispatch(setUserProfile(response))\r\n    }\r\n};\r\n\r\nexport const getStatus = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await profileApi.getStatus(userId);\r\n        dispatch(setStatus(response))\r\n    }\r\n};\r\n\r\nexport const updateStatus = (status) => {\r\n    return async (dispatch) => {\r\n        let response = await profileApi.updateStatus(status);\r\n        if (response.resultCode === 0) {\r\n            dispatch(setStatus(status))\r\n        }\r\n    }\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}