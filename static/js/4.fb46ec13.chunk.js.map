{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","hoc/WithAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","className","classes","dialog","active","to","id","name","Message","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","messagesElements","messages","isAuth","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","addNewMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCapMC,EAVI,SAAAC,GACf,OACI,yBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,QAC3C,kBAAC,IAAD,CAASC,GAAE,kBAAaL,EAAMM,KACzBN,EAAMO,QCERC,EANC,SAAAR,GACZ,OACI,yBAAKC,UAAWC,IAAQO,SAAUT,EAAMS,U,wCCG1CC,EAAeC,YAAiB,KAkDhCC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAjBL,SAAAb,GACnB,OACI,0BAAMe,SAAUf,EAAMgB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXZ,KAAK,iBACLa,YAAY,qBACZC,SAAU,CAACC,IAAUZ,MAGhC,6BACI,oDAQDa,EAlDC,SAACvB,GAEb,IAAIwB,EAAQxB,EAAMyB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACzB,GAAD,OAAY,kBAAC,EAAD,CAAYI,KAAMJ,EAAOI,KAAMD,GAAIH,EAAOG,QAE1FuB,EAAmBL,EAAMM,SAASF,KAAI,SAACnB,GAAD,OAAa,kBAAC,EAAD,CAASA,QAASA,EAAQA,aAEhF,IAAKT,EAAM+B,OAAQ,OAAO,kBAAC,IAAD,CAAU1B,GAAI,WAMzC,OAEI,yBAAKJ,UAAWC,IAAQyB,SACpB,yBAAK1B,UAAWC,IAAQ8B,cACnBN,GAEL,6BACI,yBAAKzB,UAAWC,IAAQ4B,UACnBD,GAEL,kBAACjB,EAAD,CAAqBG,SAdb,SAAAkB,GAChBjC,EAAMkC,YAAYD,EAAOE,sB,wCClB7BC,EAA6B,SAACZ,GAC9B,MAAO,CACHO,OAAQP,EAAMa,KAAKN,S,OCkBZO,sBACXC,aAjBkB,SAACf,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAKF,SAACe,GACtB,MAAO,CACHN,YAAa,SAACC,GACVK,EAASC,YAA2BN,UDRhB,SAAAO,GAAc,IACpCC,EADmC,uKAGjC,OAAKC,KAAK5C,MAAM+B,OACT,kBAACW,EAAcE,KAAK5C,OADI,kBAAC,IAAD,CAAUK,GAAI,eAHZ,GACTwC,IAAMH,WAQtC,OAAOH,YAAQH,EAARG,CAAoCI,KCKhCL,CAGbf","file":"static/js/4.fb46ec13.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Bsbr\",\"dialogsItems\":\"Dialogs_dialogsItems__3q8XE\",\"active\":\"Dialogs_active__u_O8W\",\"dialog\":\"Dialogs_dialog__13ddY\",\"messages\":\"Dialogs_messages___iH93\",\"message\":\"Dialogs_message__2cyp0\"};","import React from \"react\";\r\nimport classes from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = props => {\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={`dialogs/${props.id}`}>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport classes from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = props => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n    )\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map((dialog) => <DialogItem name={dialog.name} id={dialog.id} />);\r\n\r\n    let messagesElements = state.messages.map((message) => <Message message={message.message} />);\r\n\r\n     if (!props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n    let addNewMessage = values => {\r\n        props.sendMessage(values.newMessageBody)\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div>\r\n                <div className={classes.messages}>\r\n                    {messagesElements}\r\n                </div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nconst AddMessageForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name=\"newMessageBody\"\r\n                       placeholder=\"Enter your message\"\r\n                       validate={[required, maxLength100]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport const WithAuthRedirect = Component => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n};","import React from \"react\";\r\nimport { addNewMessageActionCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(addNewMessageActionCreator(newMessageBody))\r\n        },\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}